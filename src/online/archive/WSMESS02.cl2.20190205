      $SET SQL(dbman=ODBC, TARGETDB=MSSQLSERVER, NOAUTOCOMMIT)
       IDENTIFICATION DIVISION.
       PROGRAM-ID. WSMESS02.
       AUTHOR.     Cowtown.
       DATE-COMPILED.
      *SECURITY.   *****************************************************
      *            *                                                   *
      *            *   THIS PROGRAM IS THE PROPERTY OF CSO             *
      *            *                                                   *
      *            *   USE OF THIS PROGRAM BY OTHER THAN THE EMPLOYEES *
      *            *   OF     CSO     IS EXPRESSLY PROHIBITED WITHOUT  *
      *            *   THE PRIOR WRITTEN PERMISSION OF CSO.            *
      *            *                                                   *
      *            *****************************************************

020617******************************************************************
020617*REMARKS.                                                        *
020617*  Returns premium calc based on info passed to me.              *
020617******************************************************************
020617*                   C H A N G E   L O G
020617*
020617* CHANGES ARE MARKED BY THE CHANGE EFFECTIVE DATE.
020617*-----------------------------------------------------------------
020617*  CHANGE   CHANGE REQUEST PGMR  DESCRIPTION OF CHANGE
020617* EFFECTIVE    NUMBER
020617*-----------------------------------------------------------------
020617* 020617   2017020300002   PEMA  New Program
061515******************************************************************
       ENVIRONMENT DIVISION.
       data division.
       WORKING-STORAGE SECTION.
       77  FILLER  PIC X(32) VALUE '********************************'.
       77  FILLER  PIC X(32) VALUE '   WSMESS02 WORKING STORAGE     '.
       77  FILLER  PIC X(32) VALUE '********************************'.
      *
      * program buffers
      *
       77 ws-seq-num                   pic s9(8) comp value 0.
       77 ws-flags                     pic s9(8) comp value 0.
       77 WS-COMP-CD                   PIC X  VALUE LOW-VALUES.
       77  ws-comp-id                  pic xxx value spaces.
       77 WS-SAVE-ACCOUNT              PIC X(10)  VALUE SPACES.
       77 WS-BIN-ORIG-EFF-DT           PIC XX  VALUE LOW-VALUES.
       77 WS-ORIG-EFF-DT               PIC X(10)  VALUE SPACES.
       77 WS-EFF-DATE                  PIC X(10)  VALUE SPACES.
       77 WS-lf-exp-date               PIC X(10)  VALUE SPACES.
       77  ws-ah-exp-date              pic x(10)  value spaces.
       77 X1                           PIC S999 COMP-3 VALUE +0.
       77 S1                           PIC S999 COMP-3 VALUE +0.
       77 S2                           PIC S999 COMP-3 VALUE +0.
       77 S3                           PIC S999 COMP-3 VALUE +0.
       77  b1                          pic s999 comp-3 value +0.
       77 WS-BUILD-SW                  PIC X.
          88  TIME-TO-BUILD               VALUE 'Y'.
       77 WS-SAVE-ERACCT               PIC X(2000).
       77 WS-DIS-RESP                  PIC 9(05) VALUE ZEROS.
       77 WS-PERFORM-SW                PIC X VALUE SPACES.
          88  GET-RATES                    VALUE 'R'.
          88  GET-ACT-ACCTS                VALUE 'A'.
       77  ws-bin-current-dt           pic xx  value low-values.
       77 ws-bin-eff-dt                pic xx  value low-values.
       77  ws-bin-exp-dt               pic xx  value low-values.
       77 ws-bin-1st-pmt-dt            pic xx  value low-values.
       77 ws-bin-pri-birth-dt          pic xx  value low-values.
       77 ws-bin-cob-birth-dt          pic xx  value low-values.
       77 WS-DISP-AMT                  PIC Z,ZZZ,Z99.99.
       77 ws-disp-rate                 pic z9.99999.
       77  WS-ERACCT-SW                PIC X VALUE ' '.
           88  END-OF-ERACCT                 VALUE 'Y'.
       77  WS-ERCTBL-SW                PIC X VALUE ' '.
           88  END-OF-ERCTBL                 VALUE 'Y'.
       77  WS-STATUS                   PIC X.
       77  ws-socket-sw                pic x value ' '.
           88  end-of-socket              value 'Y'.
       77  rec-cnt                     pic 9(5) value zeros.
       77  ws-stop-sw                  pic x value ' '.
           88  i-say-stop                 value 'Y'.
       77  ws-browse-sw                pic x value ' '.
           88  browse-started            value 'Y'.
       77  ws-contract-sw              pic x  value ' '.
           88  contract-no-assigned      value 'Y'.
       77  ws-error-sw                 pic x value ' '.
           88  error-in-one-coverage     value 'Y'.
       77  ws-connect-sw               pic x value ' '.
           88  connected-to-db           value 'Y'.
       77  client-id                   pic xxx.
       
       01  P pointer.
       01  KIXSYS                      pic X(7)  VALUE Z"KIXSYS".
       01  var-ptr pointer.
       01  env-var-len                 pic 9(4)  binary.
       01  rc                          pic 9(9)  binary.
      
       01  WS-KIXSYS.
           05  WS-KIX-FIL1             PIC X(10).
           05  WS-KIX-APPS             PIC X(10).
           05  WS-KIX-ENV              PIC X(10).
           05  WS-KIX-MYENV            PIC X(10).
           05  WS-KIX-SYS              PIC X(10).

       01  a-angle-n                   pic s9(7)v9(11) comp-3 value +0.
       01  a-angle-n-m                 pic s9(7)v9(11) comp-3 value +0.
       01  a-prm-angle-n               pic s9(7)v9(11) comp-3 value +0.
       01  a-prm-angle-n-m             pic s9(7)v9(11) comp-3 value +0.
       01  gamma                       pic s9(7)v9(11) comp-5 value +0.
       01  temp-value-1                pic s9(7)v9(11) comp-3 value +0.
       01  temp-value-2                pic s9(7)v9(11) comp-3 value +0.
       01  temp-value-3                pic s9(7)v9(11) comp-3 value +0.
       01  temp-value-4                pic s9(7)v9(11) comp-3 value +0.
       01  temp-value-5                pic s9(7)v9(11) comp-3 value +0.
       01  temp-value-6                pic s9(7)v9(11) comp-3 value +0.
       01  mob                         pic s9(7)v9(11) comp-3 value +0.
       01  m                           pic s9(4)v9(4)  comp-3 value +0.
       01  n                           pic s9(4)v9(4)  comp-3 value +0.
       01  i                           pic s9(7)v9(11) comp-3 value +0.
       01  l                           PIC S9(7)V99    comp-3 value +0.
       01  pmt                         pic s9(7)v99    comp-3 value +0.
       01  ppy                         pic s9(5)       comp-3 value +0.
       01  dpp                         pic s9(5)       comp-3 value +0.
       01  d                           pic s9(5)       comp-3 value +0.
       01  plus2                       pic s9(5)       comp-3 value +0.
       01  lf-rate                     pic s999v9(5)   comp-3 value +0.
       01  ah-rate                     pic s999v9(5)   comp-3 value +0.
       01  DL-PREMIUM                  PIC S9(7)V99    comp-3 value +0.
       01  LL-PREMIUM                  PIC S9(7)V99    comp-3 value +0.
       01  AH-PREMIUM                  PIC S9(7)V99    comp-3 value +0.
       01  T-FINANCED                  PIC S9(7)V99    comp-3 value +0.
       01  T-REG-Z-FINANCED            PIC S9(7)V99    comp-3 value +0.
       01  T-PAYMENTS                  PIC S9(7)V99    comp-3 value +0.

       EXEC SQL
          INCLUDE SQLDA
       END-EXEC
      
       EXEC SQL
          INCLUDE SQLCA
       END-EXEC

       EXEC SQL
          BEGIN DECLARE SECTION
       END-EXEC

       01  ws-dealer-state             pic xx.
       01  ws-dealer-id                pic x(10).
       01  ws-contract-eff-dt          pic x(10).
       01  ws-contract-no              pic x(10) value spaces.
       01  ws-contract-suffix          pic x     value spaces.

       01  ws-FL-lf-benefit-code-table.
           05  ws-fl-lf-table.
               10  filler              pic x(5) value 'RSN3K'.
               10  filler              pic x(5) value 'LSN3O'.
               10  filler              pic x(5) value 'NSN3S'.
               10  filler              pic x(5) value 'TSN3X'.

               10  filler              pic x(5) value 'RSY3M'.
               10  filler              pic x(5) value 'LSY3Q'.
               10  filler              pic x(5) value 'NSY3U'.
               10  filler              pic x(5) value 'TSY3Z'.

               10  filler              pic x(5) value 'RJN3L'.
               10  filler              pic x(5) value 'LJN3P'.
               10  filler              pic x(5) value 'NJN3T'.
               10  filler              pic x(5) value 'TJN3Y'.

               10  filler              pic x(5) value 'RJY3N'.
               10  filler              pic x(5) value 'LJY3R'.
               10  filler              pic x(5) value 'NJY3V'.
               10  filler              pic x(5) value 'TJY4A'.

           05  filler redefines ws-fl-lf-table occurs 16.
               10  ws-fl-lf-ben-type   pic x.
               10  ws-fl-lf-sin-jnt    pic x.
               10  ws-fl-lf-dismemb    pic x.
               10  ws-fl-lf-ben-code   pic xx.

       01  ws-FL-ah-benefit-code-table.
           05  ws-fl-ah-table.
               10  filler              pic x(8) value 'ASYR1401'.
               10  filler              pic x(8) value 'ASYR0703'.
               10  filler              pic x(8) value 'ASYR3004'.
               10  filler              pic x(8) value 'ASYE1405'.
               10  filler              pic x(8) value 'ASYE3002'.

               10  filler              pic x(8) value 'ASNR145C'.
               10  filler              pic x(8) value 'ASNR075G'.
               10  filler              pic x(8) value 'ASNR305D'.
               10  filler              pic x(8) value 'ASNE145E'.
               10  filler              pic x(8) value 'ASNE305F'.

               10  filler              pic x(8) value 'AJYR1454'.
               10  filler              pic x(8) value 'AJYR0753'.
               10  filler              pic x(8) value 'AJYR3055'.
               10  filler              pic x(8) value 'AJYE1456'.
               10  filler              pic x(8) value 'AJYE3057'.

               10  filler              pic x(8) value 'AJNR145H'.
               10  filler              pic x(8) value 'AJNR075L'.
               10  filler              pic x(8) value 'AJNR305I'.
               10  filler              pic x(8) value 'AJNE145J'.
               10  filler              pic x(8) value 'AJNE305K'.
           05  filler redefines ws-fl-ah-table occurs 20.
               10  ws-fl-ah-ben-type   pic x.
               10  ws-fl-ah-sin-jnt    pic x.
               10  ws-fl-ah-fullterm   pic x.
               10  ws-fl-ah-ret-elim   pic x.
               10  ws-fl-ah-elim-days  pic xx.
               10  ws-fl-ah-ben-code   pic xx.

       01  ws-key-stuff.
           05  ws-ks-contract-no       pic x(10) value spaces.

       01  ws-error-message            pic x(50) value spaces.
       01  sqlcmd                      pic x(1024).
       01  svr                         pic x(32).
       01  usr                         pic x(32).
       01  pass                        pic x(32).
       01  usr-pass                    pic x(64).
       01  ws-disp-code                pic s9(11).

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  These indicators are used to determine if a variable      ***
      ***  is        null.           The indicator will be -1        ***
      ***  if the value        is null  and +0 if the value is       ***
      ***  something other than null.  Here is an example on how     ***
      ***  to use the indicator variables.                           ***
      ***                                                            ***
      ***     EXEC SQL                                               ***
      ***        fetch checkapp into                                 ***
      ***           :db-app-status :nu-app-status,                   ***
      ***           :db-app-by     :nu-app-by,                       ***
      ***           :db-app-date   :nu-app-date,                     ***
      ***           :db-app-batch  :nu-app-batch                     ***
      ***     END-EXEC                                               ***
      ***                                                            ***
      ***           OR This way on an update                         ***
      ***                                                            ***
      ***     EXEC SQL                                               ***
      ***        UPDATE                                              ***
      ***           CUC_Logic_Remittance                             ***
      ***        SET                                                 ***
      ***           LogicStatus     = :ws-status-code,               ***
      ***           LogicStatusDate = :ws-status-date,               ***
      ***           BatchNumber     = :ws-batch-no :nu-batchno       ***
      ***        WHERE                                               ***
      ***           RemitId = :ws-remit-id                           ***
      ***     END-EXEC                                               ***
      ***                                                            ***
      ***    Also, when the table has a column with a data type of   ***
      ***  "BIT" and used as true/false move the 1 byte receiving    ***
      ***  field to ws-bit and check out ws-bit-comp. if = zeros,    ***
      ***  then its false. I think true would be 256.                ***
      ***                                                            ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

       01  indicator-vaiables-for-nulls.
           05  nu-app-status           pic s9(4) comp value +0.
           05  nu-app-by               pic s9(4) comp value +0.
           05  nu-app-date             pic s9(4) comp value +0.
           05  nu-app-batch            pic s9(4) comp value +0.
           05  nu-fincar               pic s9(4) comp value +0.
           05  nu-batchno              pic s9(4) comp value +0.
           05  nu-error-message        pic s9(4) comp value +0.

       01  sql-cert-records.
           05  sql-dlr-state           pic xx.
           05  sql-dlr-id              pic x(10).
           05  sql-eff-dt              pic x(10).
           05  sql-contr-no            pic x(10).
           05  sql-contr-suffix        pic x.

       EXEC SQL
          END DECLARE SECTION
       END-EXEC

       01  filler.
           05  ws-work-in              pic x(10).
           05  ws-work-out             pic x(10).
           05  ws-work-out-v2 redefines
               ws-work-out             pic 9(8)v99.
           05  ws-work-out-v0 redefines
               ws-work-out             pic 9(10).
           05  ws-work-out-v5 redefines
               ws-work-out             pic 9(5)v9(5).
       01  filler.
           05  ws-last-suffix          pic x value low-values.
           05  ws-tbl-last-suffix      pic x value low-values.
           05  filler.  *> Use X1 for this table.
               10  ws-codes            pic x(26) value
               ' ABCDEFGHIJKLMNOPQRSTUVWXY'.
               10  ws-suffix-value redefines ws-codes
                 occurs 26             pic x.

       01  ws-work-date.
           05  ws-work-ccyy            pic x(4).
           05  ws-work-mm              pic xx.
           05  ws-work-dd              pic xx.
       01  ws-work-date-num redefines ws-work-date
                                       pic 9(8).

       01  raw-message002-area.
           05  raw-message-num         pic x(10).
           05  raw-state               pic xx.
           05  raw-acct-no             pic x(10).
           05  raw-vin                 pic x(17).
           05  raw-lf-ben-code         pic xx.
           05  raw-ah-ben-code         pic xx.
           05  raw-earn-meth           pic x.
           05  raw-pri-birth-date      pic x(10).
           05  raw-cob-birth-date      pic x(10).
           05  raw-loan-amt            pic x(9).
           05  raw-eff-date            pic x(10).
           05  raw-1st-pmt-dt          pic x(10).
           05  raw-pmts-per-year       pic xx.
           05  raw-loan-term           pic xxx.
           05  raw-lf-term             pic XXX.
           05  raw-ah-term             pic xxx.
           05  raw-apr                 pic x(8).
           05  raw-lf-sin-jnt-ind      pic x.
           05  raw-ah-sin-jnt-ind      pic x.
           05  raw-dismemberment       pic x.
           05  raw-retro-elim          pic x.
           05  raw-waiting-days        pic xx.
           05  raw-crit-per            pic xx.

       01  ws-rate-work-area.
           05  ws-rate-state           pic xx.
           05  ws-rate-acct-no         pic x(10).
           05  ws-rate-vin             pic x(17).
           05  ws-rate-in-lf-ben-code  pic xx.
           05  ws-rate-in-ah-ben-code  pic xx.
           05  ws-rate-earn-meth       pic x.
           05  ws-rate-pri-birth-date  pic x(10).
           05  ws-rate-cob-birth-date  pic x(10).
           05  ws-rate-eff-date        pic x(10).
           05  ws-rate-1st-pmt-dt      pic x(10).
           05  ws-rate-benefit-type    pic x.
           05  ws-rate-lf-benefit-cd   pic xx.
           05  ws-rate-ah-benefit-cd   pic xx.
           05  ws-rate-loan-amt        pic 9(6)v99.
           05  ws-rate-per-pmt         pic 9(7)v99.
           05  ws-rate-lf-prem         pic 9(5)v99.
           05  ws-rate-ah-prem         pic 9(5)v99.
           05  ws-rate-lf-rate         pic 99v9(5).
           05  ws-rate-ah-rate         pic 99v9(5).
           05  ws-rate-apr             pic 99v9(5).
           05  ws-rate-pmts-per-year   pic 99.
           05  ws-rate-loan-term       pic 999  value zeros.
           05  ws-rate-lf-term         pic 999  value zeros.
           05  ws-rate-ah-term         pic 999  value zeros.
           05  ws-issue-age            pic 999  value zeros.
           05  ws-cob-age              pic 999  value zeros.
           05  ws-rate-age             pic 999  value zeros.
           05  ws-max-lf-benefit       pic 9(7)v99 value zeros.
           05  ws-max-ah-benefit       pic 9(7)v99 value zeros.
           05  ws-rate-tot-financed    pic s9(7)v99 value zeros.
           05  ws-rate-tot-pmts        pic s9(7)v99 value zeros.
           05  ws-rate-crit-per        pic 99.
           05  ws-rate-sin-jnt-lf      pic x.
           05  ws-rate-sin-jnt-ah      pic x.
           05  ws-rate-dismemberment   pic x.
           05  ws-rate-retro-elim      pic x.
           05  ws-rate-waiting-days    pic 99.
           05  ws-rate-fullterm        pic x.

       01  ws-return-string.
           05  ws-return-error-no      pic x(4).
           05  ws-sc1                  pic x.
           05  ws-return-error-mess    pic x(46).
           05  ws-sc2                  pic x.
           05  ws-return-contract-no   pic x(11).
           05  ws-sc3                  pic x.
           05  ws-return-lf-max-amt    pic z,zzz,z99.99.
           05  ws-sc4                  pic x.
           05  ws-return-ah-max-amt    pic zzz,z99.99.
           05  ws-sc5                  pic x.
           05  ws-return-lf-prem       pic zzz,z99.99.
           05  ws-sc6                  pic x.
           05  ws-return-ah-prem       pic zzz,z99.99.
           05  ws-sc7                  pic x.
           05  ws-return-lf-rate       pic z9.99999.
           05  ws-sc8                  pic x.
           05  ws-return-ah-rate       pic z9.99999.
           05  ws-sc9                  pic x.
           05  ws-return-lf-exp-dt     pic x(10).
           05  ws-sc10                 pic x.
           05  ws-return-ah-exp-dt     pic x(10).
           05  ws-sc11                 pic x.
           05  ws-return-lf-benefit-cd pic xx.
           05  ws-sc12                 pic x.
           05  ws-return-ah-benefit-cd pic xx.
           05  ws-sc13                 pic x.
           05  ws-return-period-pmt    pic zzz,z99.99.
           05  ws-sc14                 pic x.
           05  ws-return-tot-financed  pic z,zzz,z99.99.
           05  ws-sc15                 pic x.
           05  ws-return-tot-pmts      pic z,zzz,z99.99.

       01  WS-AM-KEY.
           05  WS-AM-COMPANY-CD        PIC X.                                       
           05  WS-AM-CARRIER           PIC X.                                       
           05  WS-AM-GROUP             PIC X(6).                                    
           05  WS-AM-STATE             PIC XX.   
           05  WS-AM-ACCOUNT           PIC X(10).
           05  WS-AM-EXP-DT            PIC XX.
           05  FILLER                  PIC X(4).

       01  ws-cm5-compare-key          pic x(12).
       01  WS-CM5-KEY.
           05  WS-CM5-COMPANY-CD       PIC X.                                       
           05  WS-CM5-CERT-NO          PIC X(11).

       01  ws-cm-compare-key           pic x(33).
       01  WS-CM-KEY.
           05  WS-CM-COMPANY-CD        PIC X.                                       
           05  WS-CM-CARRIER           PIC X.                                       
           05  WS-CM-GROUP             PIC X(6).                                    
           05  WS-CM-STATE             PIC XX.   
           05  WS-CM-ACCOUNT           PIC X(10).
           05  WS-CM-EFF-DT            PIC XX.
           05  WS-CM-CERT-NO.
               10  ws-cm-cert-ten      pic x(10).
               10  ws-cm-cert-suffix   pic x.

       01  WS-CS-KEY.
           05  WS-CS-COMPANY-CD        PIC X.                                       
           05  WS-CS-CARRIER           PIC X.                                       
           05  WS-CS-GROUP             PIC X(6).                                    
           05  WS-CS-STATE             PIC XX.   
           05  WS-CS-ACCOUNT           PIC X(10).
           05  WS-CS-EFF-DT            PIC XX.
           05  WS-CS-CERT-NO           PIC X(11).
           05  WS-CS-TRLR-TYPE         PIC X.

       01  WS-AM-ALT-KEY.
           05  WS-AM-ALT-ACCOUNT       PIC X(10).
           05  WS-AM-ALT-EXP-DT        PIC XX.

       01  WS-CF-KEY-SAVE              PIC X(10).
       01  WS-CF-KEY.
           05  WS-CF-COMPANY-ID        PIC XXX.
           05  WS-CF-RECORD-TYPE       PIC X.
           05  WS-CF-ACCESS            PIC X(4).
           05  WS-CF-SEQ-NO            PIC S9(4) COMP.
           
       01  filler.
           05  ws-errors-table.
               10  filler              pic x(50) value
               '0000Transaction successfully completed'.
               10  filler              pic x(50) value
               '0101Problem with amounts'.
               10  filler              pic x(50) value
               '0102Problem with dates'.
               10  filler              pic x(50) value
               '0103Issue age outside limits'.
               10  filler              pic x(50) value
               '0104Attained age outside limits'.
               10  filler              pic x(50) value
               '0105Term is not valid must be gt 0 and lt 361'.
               10  filler              pic x(50) value
               '0106Term is outside limits'.
               10  filler              pic x(50) value
               '0107Amount is outside limits'.
               10  filler              pic x(50) value
               '0108Loan term must be ge insurance term'.
               10  filler              pic x(50) value
               '0109Total benefit is outside limits'.
               10  filler              pic x(50) value
               '0110Rates found were zero'.
               10  filler              pic x(50) value
               '0111Rate table was not found'.
               10  filler              pic x(50) value
               '0112Rate file not open'.
               10  filler              pic x(50) value
               '0113Premium is out of tolerence'.
               10  filler              pic x(50) value
               '0114Duplicate contract and VIN on Logic'.
               10  filler              pic x(50) value
               '0115Problem with loan or insurance term'.
           05  filler redefines ws-errors-table occurs 16.
               10  ws-table-error-no   pic x(4).
               10  ws-table-error-mess pic x(46).


       01  ws-mess002-length           pic s9(4) comp value +1024.
       01  WS-MESS002-PASS-AREA        PIC X(1024).
       01  WS-CID-NO                   PIC X(8).

       01  WS-DISP-RESP                PIC 9(5).
       01  WS-RESPONSE                 PIC S9(8)   COMP.
           88  RESP-NORMAL                  VALUE +00.
           88  RESP-NOTFND                  VALUE +13.
           88  resp-duprec                  value +14.
           88  resp-dupkey                  value +15.
           88  RESP-NOTOPEN                 VALUE +19.
           88  RESP-ENDFILE                 VALUE +20.

                                        COPY ERCACCT.
                                        COPY ELCCERT.
                                        COPY ELCCRTT.
                                        COPY ELCCNTL.
                                        COPY ELCFUNDT.
                                        COPY ELCDATE.
                                        COPY ELCCALC.
      
       linkage section.
       01  DFHCOMMAREA                 pic x(1024).

       01  var  pic x(30).

       procedure division.

           display ' Entering program WSMESS02 '
           move dfhcommarea            to ws-mess002-pass-area

           perform 0000-init           thru 0000-exit

           display ' mess002 area ' ws-mess002-pass-area
           perform 0100-process-message
                                       thru 0100-exit
           display ' raw after unstring ' raw-message002-area
      *    move ' returning string goes here ' to ws-return-string

           go to 0300-RETURN-CICS

           .
       0000-init.

           move 'CID'                  to client-id

           MOVE FUNCTION CURRENT-DATE  TO FUNCTION-DATE
           move ws-fn-cymd             to dc-greg-date-cymd
           move 'L'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ws-bin-current-dt
           else
              display ' error current dt invalid ' dc-error-code
           end-if

           display ' current date/time '
              ws-fn-mo '/' ws-fn-da '/' ws-fn-ccyy ' - '
                 ws-fn-hours ':' ws-fn-minutes ':' ws-fn-seconds

           set P to address of KIXSYS
           CALL "getenv" using by value P returning var-ptr
           if var-ptr = null then
              display ' kixsys not set '
           else
              set address of var to var-ptr
              move 0 to env-var-len
              inspect var tallying env-var-len
                for characters before X'00' 
              unstring var (1:env-var-len) delimited by '/'
                 into WS-KIX-FIL1 WS-KIX-APPS WS-KIX-ENV WS-KIX-MYENV
                    WS-KIX-SYS
              end-unstring
           end-if

           evaluate client-id
              when 'DCC'
                 MOVE X'05'            TO WS-COMP-CD
                 MOVE 'DCC'            TO WS-COMP-ID
              when 'CID'
                 MOVE X'04'            TO WS-COMP-CD
                 MOVE 'CID'            TO WS-COMP-ID
              when 'AHL'
                 MOVE X'06'            TO WS-COMP-CD
                 MOVE 'AHL'            TO WS-COMP-ID
              when other
                 move '0113;Invalid company id ' to ws-return-string
                 display ' Invalid company id ' client-id
                 go to 0300-RETURN-CICS
           END-evaluate

           .
       0000-exit.
           exit.

       0020-edit-received.

           if ws-rate-sin-jnt-lf = 'S' OR 'J'
              continue
           else
              move 'S'                 to ws-rate-sin-jnt-lf
           end-if
           if ws-rate-sin-jnt-ah = 'S' OR 'J'
              continue
           else
              move 'S'                 to ws-rate-sin-jnt-ah
           end-if
           if ws-rate-dismemberment = 'Y'
              continue
           else
              move 'N'                 to ws-rate-dismemberment
           end-if

           if ws-rate-in-ah-ben-code = 'A'
              if ws-rate-retro-elim = 'R' or 'E'
                 continue
              else
                 move 'R'              to ws-rate-retro-elim
              end-if
           else
              move spaces              to ws-rate-retro-elim
           end-if

      **==============================================================**
      **                                                              **
      **  Validate passed effective date. Probably should add edits   **
      **                                                              **
      **==============================================================**

           move ws-rate-eff-date (7:4) to ws-work-date (1:4)
           move ws-rate-eff-date (1:2) to ws-work-date (5:2)
           move ws-rate-eff-date (4:2) to ws-work-date (7:2)
           move ws-work-date-num       to dc-greg-date-cymd
           move 'L'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ws-bin-eff-dt
           else
              move '0102;Problem with Eff Date' to ws-return-string
              go to 0300-RETURN-CICS
           end-if

           if ws-bin-eff-dt > ws-bin-current-dt
              move '0102;Future Effective Date' to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Validate passed 1st pmt date.   Probably should add edits   **
      **                                                              **
      **==============================================================**

           move ws-rate-1st-pmt-dt (7:4)
                                       to ws-work-date (1:4)
           move ws-rate-1st-pmt-dt (1:2)
                                       to ws-work-date (5:2)
           move ws-rate-1st-pmt-dt (4:2)
                                       to ws-work-date (7:2)
           move ws-work-date-num       to dc-greg-date-cymd
           move 'L'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ws-bin-1st-pmt-dt
           else
              move low-values          to ws-bin-1st-pmt-dt
              move '0102;Problem with 1st pmt Date'
                                       to ws-return-string
              go to 0300-RETURN-CICS
           end-if

           if ws-bin-1st-pmt-dt <= ws-bin-eff-dt
              move low-values          to ws-bin-1st-pmt-dt
              move '0102;1st Pmt Date not > Eff Dt '
                                       to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Only use the code below if there is a time they don't       **
      **  send the 1st pmt date.                                      **
      **                                                              **
      **==============================================================**

           if ws-bin-1st-pmt-dt = low-values
              move +1                  to dc-elapsed-months
              move +0                  to dc-elapsed-days
              move '6'                 to dc-option-code
              perform 9700-date-link   thru 9700-exit
              if no-conversion-error
                 move dc-bin-date-2    to ws-bin-1st-pmt-dt
              else
                 move '0102;Problem with 1st pmt Date'
                                       to ws-return-string
                 go to 0300-RETURN-CICS
              end-if
           end-if

      **==============================================================**
      **                                                              **
      **  Calculate the days to first payment date                    **
      **                                                              **
      **==============================================================**

           move ws-bin-eff-dt          to dc-bin-date-1
           move ws-bin-1st-pmt-dt      to dc-bin-date-2
           move zeros                  to dc-elapsed-months
                                          dc-elapsed-days
           move '1'                    to dc-option-code
           perform 9700-date-link   thru 9700-exit
           if no-conversion-error
              move dc-elapsed-days     to d
           else
              move 30                  to d
           end-if


      **==============================================================**
      **                                                              **
      **  Calculate the lf expiration date to be passed back.         **
      **                                                              **
      **==============================================================**

           move ws-bin-1st-pmt-dt      to dc-bin-date-1
           compute dc-elapsed-months = ws-rate-lf-term - 1
           move +0                     to dc-elapsed-days
           move '6'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-2       to ws-bin-exp-dt
              move dc-greg-date-a-edit to ws-lf-exp-date
           else
              move '0102;Problem with calculating exp date'
                                    to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Calculate the ah expiration date to be passed back.         **
      **                                                              **
      **==============================================================**

           move ws-bin-1st-pmt-dt      to dc-bin-date-1
           compute dc-elapsed-months = ws-rate-ah-term - 1
           move +0                     to dc-elapsed-days
           move '6'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-2       to ws-bin-exp-dt
              move dc-greg-date-a-edit to ws-ah-exp-date
           else
              move '0102;Problem with calculating exp date'
                                    to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Validate primary borrower birth date.                       **
      **                                                              **
      **==============================================================**

           move ws-rate-pri-birth-date (7:4)
                                       to ws-work-date (1:4)
           move ws-rate-pri-birth-date (1:2)
                                       to ws-work-date (5:2)
           move ws-rate-pri-birth-date (4:2)
                                       to ws-work-date (7:2)
           move ws-work-date-num       to dc-greg-date-cymd
           move 'L'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ws-bin-pri-birth-dt
           else
              move '0102;Problem with Pri Birth Date'
                                       to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Validate co borrowers birth date.                           **
      **                                                              **
      **==============================================================**

           if ws-rate-cob-birth-date (7:4) = spaces
              move zeros               to ws-rate-cob-birth-date
           end-if
           move ws-rate-cob-birth-date (7:4)
                                       to ws-work-date (1:4)
           move ws-rate-cob-birth-date (1:2)
                                       to ws-work-date (5:2)
           move ws-rate-cob-birth-date (4:2)
                                       to ws-work-date (7:2)
           move low-values             to ws-bin-cob-birth-dt
           if ws-work-date-num not = zeros
              move ws-work-date-num    to dc-greg-date-cymd
              move 'L'                 to dc-option-code
              perform 9700-date-link   thru 9700-exit
              if no-conversion-error
                 move dc-bin-date-1    to ws-bin-cob-birth-dt
              else
                 move '0102;Problem with Cob Birth Date'
                                       to ws-return-string
                 go to 0300-RETURN-CICS
              end-if
           end-if

      **==============================================================**
      **                                                              **
      **  Calculate primary borrowers age.                            **
      **                                                              **
      **==============================================================**

           move ws-bin-pri-birth-dt    to dc-bin-date-1
           move ws-bin-eff-dt          to dc-bin-date-2
           move '1'                    to dc-option-code
           perform 9700-date-link      thru 9700-exit
           if no-conversion-error
              compute ws-issue-age = dc-elapsed-months / +12
              display ' issue age = 'ws-issue-age
           else
              move '0102;Problem with Pri Age calculation'
                                       to ws-return-string
              go to 0300-RETURN-CICS
           end-if

      **==============================================================**
      **                                                              **
      **  Calculate co borrowers age.                                 **
      **                                                              **
      **==============================================================**

           move zeros                  to ws-cob-age
           if ws-bin-cob-birth-dt not = low-values
              move ws-bin-cob-birth-dt to dc-bin-date-1
              move ws-bin-eff-dt       to dc-bin-date-2
              move '1'                 to dc-option-code
              perform 9700-date-link   thru 9700-exit
              if no-conversion-error
                 compute ws-cob-age = dc-elapsed-months / +12
                 display ' cob   age = 'ws-cob-age
              else
                 move '0102;Problem with Cob Age calculation'
                                       to ws-return-string
                 go to 0300-RETURN-CICS
              end-if
           end-if

           move ws-issue-age           to ws-rate-age
           if ws-cob-age > ws-rate-age
              display ' Using Co borrower age ' ws-issue-age
                 ' ' ws-cob-age
              move ws-cob-age          to ws-rate-age
           end-if

           .
       0020-exit.
           exit.

       0025-assign-ben-cd.

      **==============================================================**
      **                                                              **
      **     Eventually, depending on how well this project takes off **
      **  we should figure out a much better way to assign benefit    **
      **  codes. For now since we only have 1 or 2 accounts in TX it  **
      **  will be hard coded.                                         **
      **                                                              **
      **==============================================================**

      ***____________________________________________________________***
      **|                                                            |**
      **|   Get the lf benefit code first.                           |**
      **|                                                            |**
      ***____________________________________________________________***
           if ws-rate-state = 'FL'
              if ws-rate-in-lf-ben-code <> spaces
                 PERFORM varying b1 from +1 by +1 until
                    (b1 > +16)
                    or ((ws-fl-lf-ben-type (b1)
                                       = ws-rate-in-lf-ben-code (1:1))
                     and (ws-fl-lf-sin-jnt (b1)
                                       = ws-rate-sin-jnt-lf)
                     and (ws-fl-lf-dismemb (b1)
                                       = ws-rate-dismemberment))
                 end-perform
                 if b1 < +17
                    display ' found lf ben code ' ws-rate-vin ' '
                       ws-fl-lf-ben-code (b1)
                    move ws-fl-lf-ben-code (b1)
                                       to ws-rate-lf-benefit-cd
                 else
                    display ' lf benefit code not found ' ws-rate-vin
                      ' '  ws-rate-in-lf-ben-code ' ' ws-rate-earn-meth
                      ' ' ws-rate-sin-jnt-lf ' ' ws-rate-dismemberment
                    GO TO 0025-EXIT
                 end-if
              end-if
              if ws-rate-in-ah-ben-code <> spaces
                 PERFORM varying b1 from +1 by +1 until
                    (b1 > +20)
                    or ((ws-fl-ah-ben-type (b1)
                                       = ws-rate-in-ah-ben-code (1:1))
                       and (ws-fl-ah-sin-jnt (b1)
                                       = ws-rate-sin-jnt-ah)
                       and (ws-fl-ah-fullterm (b1)
                                       = ws-rate-fullterm)
                       and (ws-fl-ah-ret-elim (b1)
                                       = ws-rate-retro-elim)
                       and (ws-fl-ah-elim-days (b1)
                                       = ws-rate-waiting-days))
                 end-perform
              if b1 < +21
                 display ' found ah ben code ' ws-rate-vin ' '
                    ws-fl-ah-ben-code (b1)
                 move ws-fl-ah-ben-code (b1)
                                       to ws-rate-ah-benefit-cd
                 GO TO 0025-EXIT
              else
                 display ' ah benefit code not found ' ws-rate-vin ' '
                    ws-rate-in-ah-ben-code ' '
                    ws-rate-earn-meth ' ' ws-rate-sin-jnt-ah ' '
                    ws-rate-fullterm ' ' ws-rate-retro-elim ' '
                    ws-rate-waiting-days
                 GO TO 0025-EXIT
              end-if
           END-If

           if ws-rate-in-lf-ben-code <> spaces
              if ws-rate-sin-jnt-lf = 'S'
                 move '01'             to ws-rate-lf-benefit-cd
              else
                 move '03'             to ws-rate-lf-benefit-cd
              end-if
           else
              if ws-rate-sin-jnt-ah = 'J'
                 if ws-rate-retro-elim = 'R'
                    if ws-rate-waiting-days = 14
                       move '54'       to ws-rate-ah-benefit-cd
                    else
                       if ws-rate-waiting-days = 30
                          move '55'    to ws-rate-ah-benefit-cd
                       end-if
                    end-if
                 else
                    if ws-rate-retro-elim = 'E'
                       if ws-rate-waiting-days = 14
                          move '56'    to ws-rate-ah-benefit-cd
                       else
                          if ws-rate-waiting-days = 30
                             move '57' to ws-rate-ah-benefit-cd
                          end-if
                       end-if
                    end-if
                 end-if
              else
                 if ws-rate-retro-elim = 'R'
                    if ws-rate-waiting-days = 14
                       move '01'       to ws-rate-ah-benefit-cd
                    else
                       if ws-rate-waiting-days = 30
                          move '04'    to ws-rate-ah-benefit-cd
                       end-if
                    end-if
                 else
                    if ws-rate-retro-elim = 'E'
                       if ws-rate-waiting-days = 14
                          move '05'    to ws-rate-ah-benefit-cd
                       else
                          if ws-rate-waiting-days = 30
                             move '02' to ws-rate-ah-benefit-cd
                          end-if
                       end-if
                    end-if
                 end-if
              end-if
           end-if

           .
       0025-exit.
           exit.

       0030-get-lf-rate.

           perform 0050-get-account    thru 0050-exit

      *    move spaces                 to calculation-pass-area
           move zeros                  to cp-r-max-mon-ben
                                          cp-r-max-tot-ben
                                          cp-rate-dev-pct
                                          cp-original-premium
                                          cp-critical-months
                                          cp-term-or-ext-days
           move am-cal-table           to cp-class-CODE

           move am-lf-deviation        to cp-deviation-code

           move ws-rate-state          to cp-state
                                          cp-state-std-abbrv
           move 'L'                    to cp-benefit-type
           move ws-rate-lf-benefit-cd  to cp-benefit-cd
           move ws-rate-loan-amt       to cp-original-benefit
                                          cp-rating-benefit-amt
           move ws-rate-age            to cp-issue-age
           move ws-comp-id             to cp-company-id
           move ws-comp-cd             to cp-company-cd

           move ws-rate-apr            to cp-loan-apr

           if ws-rate-loan-term = zeros
              move ws-rate-lf-term     to ws-rate-loan-term
           end-if
           move ws-rate-lf-term        to cp-original-term
           move ws-rate-loan-term      to cp-loan-term

           move 'L'                    to cp-life-override-code
           move 'A'                    to cp-ah-override-code
           move '3'                    to cp-process-type
           move ws-rate-earn-meth      to cp-earning-method
                                          cp-rating-method
           move 'R'                    to cp-rate-file
           move ws-bin-eff-dt          to cp-cert-eff-dt
           move ws-bin-1st-pmt-dt      to cp-first-pay-date
           
           PERFORM 7000-GET-RATE       THRU 7000-EXIT

           if no-cp-error
              move cp-premium-rate     to lf-rate
                                          ws-rate-lf-rate
              move cp-r-max-tot-ben    to ws-max-lf-benefit
           else
              move zeros               to lf-rate
           end-if

           .
       0030-exit.
           exit.

       0035-get-ah-rate.

      *    move spaces                 to calculation-pass-area
           move zeros                  to cp-r-max-mon-ben
                                          cp-r-max-tot-ben
                                          cp-rate-dev-pct
                                          cp-original-premium
                                          cp-critical-months
                                          cp-term-or-ext-days
                                          cp-original-benefit
                                          cp-rating-benefit-amt

           move am-cal-table           to cp-class-CODE

           move am-ah-deviation        to cp-deviation-code

           move ws-rate-state          to cp-state
                                          cp-state-std-abbrv
           move 'A'                    to cp-benefit-type
           move ws-rate-ah-benefit-cd  to cp-benefit-cd

           if ws-rate-ah-term > zeros
              compute cp-original-benefit =
                 ws-rate-loan-amt / ws-rate-ah-term
              move cp-original-benefit to cp-rating-benefit-amt
           end-if
      *    move ws-rate-loan-amt       to cp-original-benefit
      *                                   cp-rating-benefit-amt
           move ws-rate-age            to cp-issue-age
           move ws-comp-id             to cp-company-id
           move ws-comp-cd             to cp-company-cd

           if ws-rate-loan-term = zeros
              move ws-rate-ah-term     to ws-rate-loan-term
           end-if
           move ws-rate-ah-term        to cp-original-term
           move ws-rate-loan-term      to cp-loan-term

           move 'L'                    to cp-life-override-code
           move 'A'                    to cp-ah-override-code
           move '3'                    to cp-process-type
           move ws-rate-earn-meth      to cp-earning-method
                                          cp-rating-method
           move 'R'                    to cp-rate-file
           move ws-bin-eff-dt          to cp-cert-eff-dt
           move ws-bin-1st-pmt-dt      to cp-first-pay-date
           
           PERFORM 7000-GET-RATE       THRU 7000-EXIT

           if no-cp-error
              move cp-premium-rate     to ah-rate
                                          ws-rate-ah-rate
              move cp-r-max-mon-ben    to ws-max-ah-benefit
              display ' ah rate no error ' cp-premium-rate
           else
              DISPLAY ' Error with AH Rate call ' cp-state ' '
                cp-class-code ' ' cp-deviation-code ' ' cp-benefit-type
                ' ' cp-benefit-cd ' '
                cp-original-benefit ' ' cp-issue-age cp-company-id ' '
                cp-original-term ' ' cp-loan-term ' ' cp-earning-method
                ' ' cp-return-code
              
              move zeros               to ah-rate
           end-if

           .
       0035-exit.
           exit.

       0040-format-buffer.

           move spaces                 to ws-return-string

           perform 0045-format-error   thru 0045-exit

           move ';'                    to ws-sc1
                                          ws-sc2
                                          ws-sc3
                                          ws-sc4
                                          ws-sc5
                                          ws-sc6
                                          ws-sc7
                                          ws-sc8
                                          ws-sc9
                                          ws-sc10
                                          ws-sc11
                                          ws-sc12
                                          ws-sc13
                                          ws-sc14
                                          ws-sc15
           if no-cp-error
              if ws-contract-suffix = spaces or low-values
                 move ws-contract-no   to ws-return-contract-no (2:10)
              else
                 move ws-contract-no   to ws-return-contract-no (1:10)
                 move ws-contract-suffix
                                       to ws-return-contract-no (11:1)
              end-if
              move ws-rate-lf-prem     to ws-return-lf-prem
              move ws-rate-ah-prem     to ws-return-ah-prem
              move ws-rate-lf-rate     to ws-return-lf-rate
              move ws-rate-ah-rate     to ws-return-ah-rate

              move ws-max-ah-benefit   to ws-return-ah-max-amt
              move ws-max-lf-benefit   to ws-return-lf-max-amt
              move ws-lf-exp-date      to ws-return-lf-exp-dt
              move ws-ah-exp-date      to ws-return-ah-exp-dt
              move ws-rate-lf-benefit-cd
                                       to ws-return-lf-benefit-cd
              move ws-rate-ah-benefit-cd
                                       to ws-return-ah-benefit-cd
              move ws-rate-per-pmt     to ws-return-period-pmt
              move ws-rate-tot-financed to ws-return-tot-financed
              move ws-rate-tot-pmts    to ws-return-tot-pmts
           else
              set error-in-one-coverage to true
              move spaces              to ws-contract-no
                                          ws-contract-suffix
           end-if

           .
       0040-exit.
           exit.

       0045-format-error.

           evaluate true
              when cp-return-code = '0'
                 move +1               to s1
              when cp-return-code = '1'
                 move +2               to s1
              when cp-return-code = '2'
                 move +3               to s1
              when cp-return-code = 'A'
                 move +4               to s1
              when cp-return-code = 'B'
                 move +5               to s1
              when cp-return-code = '4'
                 move +6               to s1
              when cp-return-code = '9'
                 move +7               to s1
              when cp-return-code = '8'
                 move +8               to s1
              when cp-return-code = 'H'
                 move +9               to s1
              when cp-return-code = 'C'
                 move +10              to s1
              when cp-return-code = '7'
                 move +11              to s1
              when cp-return-code = '6'
                 move +12              to s1
              when cp-return-code = 'D'
                 move +13              to s1
              when cp-return-code = 'Z'
                 move +14              to s1
                 move cp-calc-premium  to ws-return-ah-prem
                 move cp-premium-rate  to ws-return-ah-rate
                 move ws-max-ah-benefit   to ws-return-ah-max-amt
                 move ws-ah-exp-date      to ws-return-ah-exp-dt
                 move ws-rate-ah-benefit-cd to ws-return-ah-benefit-cd
              when cp-return-code = 'Y'
                 move +15              to s1
                 move cp-calc-premium  to ws-return-ah-prem
                 move cp-premium-rate  to ws-return-ah-rate
                 move ws-max-ah-benefit   to ws-return-ah-max-amt
                 move ws-ah-exp-date      to ws-return-ah-exp-dt
                 move ws-rate-ah-benefit-cd to ws-return-ah-benefit-cd
           end-evaluate

           move ws-table-error-no (s1) to ws-return-error-no
           move ws-table-error-mess (s1)
                                       to ws-return-error-mess

           .
       0045-exit.
           exit.
           
       0050-get-account.

           move ws-comp-cd             to ws-am-company-cd
           move '9'                    to ws-am-carrier
           move '000000'               to ws-am-group
           move ws-rate-state          to ws-am-state
           move ws-rate-acct-no        to ws-am-account
           move ws-bin-eff-dt          to ws-am-exp-dt

           exec cics read
              dataset      ('ERACCT')
              ridfld       (ws-am-key)
              into         (account-master)
              GTEQ
              resp         (ws-response)
           end-exec

           if resp-normal
              and (ws-comp-cd = am-company-cd)
              and (ws-rate-state = am-state)
              and (ws-rate-acct-no = am-account)
              and (ws-bin-eff-dt >= am-effective-dt)
              and (ws-bin-eff-dt < am-expiration-dt)
              continue
           else
              move '0114;No account mstr found ' to ws-return-string
              go to 0300-RETURN-CICS
           end-if

           .
       0050-exit.
           exit.

       0060-check-for-dup.

      **==============================================================**
      **                                                              **
      **    All i'm going to do here is check for a dup using         **
      **  the state, account, eff dt and last six of vin and a space  **
      **  in the cert suffix. If I do find one then I will have to    **
      **  find the last suffix and use the next available one in the  **
      **  suffix table.                                               **
      **                                                              **
      **==============================================================**

           move +1                     to x1
           move ' '                    to ws-browse-sw

           move ws-comp-cd             to ws-cm-key
           move '9'                    to ws-cm-carrier
           move '000000'               to ws-cm-group
           move ws-rate-state          to ws-cm-state
           move ws-rate-acct-no        to ws-cm-account
           move ws-bin-eff-dt          to ws-cm-eff-dt
           string
              '0000'
              ws-rate-vin (12:6)
              ' ' delimited by size into ws-cm-cert-no
           end-string
           move ws-cm-key              to ws-cm-compare-key
           move ws-cm-cert-ten         to ws-contract-no
           move low-values             to ws-last-suffix

           display ' about to startbr ' ws-cm-key (2:19) ' '
              ws-rate-eff-date  ' ' ws-cm-key (23:11)
              
           exec cics startbr
              dataset      ('ELCERT')
              ridfld       (ws-cm-key)
              gteq 
              resp         (ws-response)
           end-exec

           evaluate true
              when resp-normal
                 set browse-started to true
              when resp-notfnd or resp-endfile
                 set i-say-stop to true
              when other
                 move ws-response to ws-disp-resp
                 string
                    '9999' ';'
                    'Bad elcert startbr ' ';'
                    ws-disp-resp delimited by size
                                       into ws-return-string
                 end-string
                 display ' something went wrong with start br '
                    ws-response
                 go to 0300-RETURN-CICS
           end-evaluate

           perform until i-say-stop
              exec cics readnext
                 dataset      ('ELCERT')
                 ridfld       (ws-cm-key)
                 into         (certificate-master)
                 resp         (ws-response)
              end-exec
              if resp-normal
                 if ws-cm-key (1:32) = ws-cm-compare-key (1:32)
                    move ws-cm-cert-suffix
                                       to ws-last-suffix
                 else
                    set i-say-stop to true
                 end-if
              else
                 set i-say-stop to true
              end-if
           end-perform

           if browse-started
              exec cics endbr
                 dataset   ('ELCERT')
              END-EXEC
           end-if

           if ws-last-suffix not = low-values
              perform varying x1 from +1 by +1 until
                 (x1 > +26)
                 or (ws-last-suffix = ws-suffix-value (x1))
              end-perform
              if x1 < +27
                 move ws-suffix-value (x1 + 1)
                                       to ws-contract-suffix
              else
                 MOVE 'BLEW SUFFIX TABLE ' to ws-return-string
                 display ' more than 26 suffix codes ' ws-last-suffix
                 go to 0300-RETURN-CICS
              end-if
           end-if

           .
       0060-exit.
           exit.

       0070-open-cursor.

pemtst*    display ' declare cursor ' ws-begin-dt ' ' ws-end-dt

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  The dates on the sql table have values in the time        ***
      ***  so I convert it to a string and just use mm/dd/yyyy       ***
      ***  to perform the comparison.                                ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

           if not connected-to-db
              perform 6000-connect-to-db thru 6000-exit
           end-if

           move ws-rate-state          to ws-dealer-state
           move ws-rate-acct-no        to ws-dealer-id
           move ws-rate-eff-date       to ws-contract-eff-dt
           move zeros                  to ws-ks-contract-no
           move ws-rate-vin (12:6)     to ws-ks-contract-no (5:6)
           
           EXEC SQL
              DECLARE
                 contracts cursor for
              SELECT
                 DlrState,
                 DlrId,
                 EffDt,
                 ContractNo,
                 ContractSuffix
              FROM
                 PendingContracts
              WHERE
                 DlrState     = :ws-dealer-state
                 and DlrId    = :ws-dealer-id
                 and EffDt    = :ws-contract-eff-dt
                 and ContractNo  = :ws-ks-contract-no
              ORDER BY
                 dlrstate,
                 dlrid,
                 effdt,
                 contractno,
                 contractsuffix
           end-exec

           if sqlcode not = 0
              display "Error: cannot declare cursor "
              display ' sql retrun code ' sqlcode
              display ' sql err mess    ' sqlerrmc
              go to 0070-exit
           end-if

           EXEC SQL
              open contracts
           END-EXEC

           if sqlcode not = 0
              display "Error: cannot open cursor "
              display ' sql retrun code ' sqlcode
              display ' sql err mess    ' sqlerrmc
              go to 0070-exit
           end-if

           .
       0070-exit.
           exit.
       0080-process-input.

           perform until sqlcode not = 0
              EXEC SQL
                 fetch contracts into
                    :sql-dlr-state,
                    :sql-dlr-id,
                    :sql-eff-dt,
                    :sql-contr-no,
                    :sql-contr-suffix
              END-EXEC

              if sqlcode = 0
                 display ' got a hit ' sql-contr-no ' '
                    sql-contr-suffix
                 move sql-contr-suffix to ws-tbl-last-suffix
              else
                 if sqlcode not = 0 and 100
                    display "Error: cannot fetch row " 
                    display ' sql return code ' sqlcode
                    display ' sql err mess    ' sqlerrmc
                 end-if
              end-if
           end-perform
           if ws-tbl-last-suffix = low-values
              display ' tbl last suffix = LV '
           else
              if ws-tbl-last-suffix = spaces
                 display ' tbl last suffix = SPACES '
              else
                 display ' tbl last suffix = ' ws-tbl-last-suffix
              end-if
           end-if

           if ws-last-suffix = low-values
              display ' last suffix = LV '
           else
              if ws-last-suffix = spaces
                 display ' last suffix = SPACES '
              else
                 display ' last suffix = ' ws-last-suffix
              end-if
           end-if

           if sqlcode = 100
              display ' Normal end of record set '
           end-if

           if ws-tbl-last-suffix not = low-values
              and (ws-tbl-last-suffix > ws-last-suffix)
              perform varying x1 from +1 by +1 until
                 (x1 > +26)
                 or (ws-tbl-last-suffix = ws-suffix-value (x1))
              end-perform
              if x1 < +27
                 move ws-suffix-value (x1 + 1)
                                       to ws-contract-suffix
              else
                 MOVE 'BLEW SUFFIX TABLE ' to ws-return-string
                 display ' more than 26 suffix codes ' ws-last-suffix
                 go to 0300-RETURN-CICS
              end-if
           end-if

           EXEC SQL
               close contracts
           END-EXEC

           if sqlcode not = 0
              display "Error: cannot close cursor "
              display ' sql retrun code ' sqlcode
              display ' sql err mess    ' sqlerrmc
           end-if

           .
       0080-exit.
           exit.

       0100-process-message.

           perform 0110-unstring       thru 0110-exit
           perform 0120-format-message thru 0120-exit

           perform 0020-edit-received  thru 0020-exit
           perform 0025-assign-ben-cd  thru 0025-exit

           perform 0030-get-lf-rate    thru 0030-exit
           perform 0035-get-ah-rate    thru 0035-exit

           perform 0200-calc-payment   thru 0200-exit 

      *    go to 0100-exit

           if (contract-no-assigned)
                  or
              (error-in-one-coverage)
              continue
           else
              perform 0060-check-for-dup
                                       thru 0060-exit
              perform 0070-open-cursor thru 0070-exit
              perform 0080-process-input
                                       thru 0080-exit
           end-if
           perform 0040-format-buffer  thru 0040-exit
           set contract-no-assigned to true

           .
       0100-exit.
           exit.

       0110-unstring.

      ***____________________________________________________________***
      **|                                                            |**
      **|    Unstring the raw data into data elements                |**
      **|                                                            |**
      ***____________________________________________________________***

              unstring dfhcommarea
                 delimited by '|' into
                    raw-message-num    
                    raw-state          
                    raw-acct-no        
                    raw-vin            
                    raw-lf-ben-code    
                    raw-ah-ben-code    
                    raw-earn-meth      
                    raw-pri-birth-date 
                    raw-cob-birth-date 
                    raw-loan-amt       
                    raw-eff-date       
                    raw-1st-pmt-dt     
                    raw-pmts-per-year  
                    raw-loan-term      
                    raw-lf-term        
                    raw-ah-term        
                    raw-apr            
                    raw-lf-sin-jnt-ind 
                    raw-ah-sin-jnt-ind 
                    raw-dismemberment  
                    raw-retro-elim     
                    raw-waiting-days   
                    raw-crit-per       
              end-unstring

           .
       0110-exit.
           exit.

       0120-format-message.

      ***____________________________________________________________***
      **|                                                            |**
      **|    Format each data element to be consistant with          |**
      **|  COBOL rate copybook model                                 |**
      **|                                                            |**
      ***____________________________________________________________***

           inspect
              raw-acct-no replacing leading spaces by zeros
           inspect
              raw-pmts-per-year replacing leading spaces by zeros
           inspect
              raw-loan-term replacing leading spaces by zeros
           inspect
              raw-lf-term replacing leading spaces by zeros
           inspect
              raw-ah-term replacing leading spaces by zeros
           inspect
              raw-waiting-days replacing leading spaces by zeros
           inspect
              raw-crit-per replacing leading spaces by zeros

           inspect
              raw-loan-amt replacing all spaces by zeros
           inspect
              raw-apr replacing all spaces by zeros

           move raw-loan-amt           to ws-work-in
           perform 0130-format-amt     thru 0130-exit
           move ws-work-out-v2         to ws-rate-loan-amt
           display ' ben  in *' ws-work-in '*'
           display ' ben  out *' ws-work-out '*'

           move raw-loan-term          to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-loan-term
           display ' ln term in *' ws-work-in '*'
           display ' ln term out *' ws-work-out '*'

           move raw-lf-term            to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-lf-term
           display ' lf  term in *' ws-work-in '*'
           display ' lf  term out *' ws-work-out '*'

           move raw-ah-term            to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-ah-term
           display ' ah  term in *' ws-work-in '*'
           display ' ah  term out *' ws-work-out '*'

           move raw-waiting-days       to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-waiting-days
           display ' wait day in *' ws-work-in '*'
           display ' wait day out *' ws-work-out '*'

           move raw-crit-per           to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-crit-per
           display ' crit per in *' ws-work-in '*'
           display ' crit per out *' ws-work-out '*'

           move raw-pmts-per-year      to ws-work-in
           perform 0140-format-term    thru 0140-exit
           move ws-work-out-v0         to ws-rate-pmts-per-year
           display ' crit per in *' ws-work-in '*'
           display ' crit per out *' ws-work-out '*'

           move raw-apr                to ws-work-in
           perform 0150-format-apr     thru 0150-exit
           move ws-work-out-v5         to ws-rate-apr
           display ' ins apr  in *' ws-work-in '*'
           display ' ins apr  out *' ws-work-out '*'

           move raw-state              to ws-rate-state
           move raw-acct-no            to ws-rate-acct-no
           move raw-vin                to ws-rate-vin
           move raw-lf-ben-code        to ws-rate-in-lf-ben-code
           move raw-ah-ben-code        to ws-rate-in-ah-ben-code
           move raw-earn-meth          to ws-rate-earn-meth
           move raw-pri-birth-date     to ws-rate-pri-birth-date
           move raw-cob-birth-date     to ws-rate-cob-birth-date
           move raw-eff-date           to ws-rate-eff-date
           move raw-1st-pmt-dt         to ws-rate-1st-pmt-dt
           move raw-lf-sin-jnt-ind     to ws-rate-sin-jnt-lf
           move raw-ah-sin-jnt-ind     to ws-rate-sin-jnt-ah
           move raw-dismemberment      to ws-rate-dismemberment
           move raw-retro-elim         to ws-rate-retro-elim
           if ws-rate-crit-per = zeros
              move 'Y'                 to ws-rate-fullterm
           else
              move 'N'                 to ws-rate-fullterm
           end-if

           .
       0120-exit.
           exit.

       0130-format-amt.

           move zeros                  to ws-work-out
           perform varying s2 from +10 by -1 until
              (s2 < +1)
              or (ws-work-in (s2:1) = '.')
           end-perform
           if s2 < +9
              move ws-work-in (s2 + 1:2)
                                    to ws-work-out (9:2)
              move +8               to s3
              subtract +1 from s2
              perform varying s2 from s2 by -1 until
                 (s2 < +1)
                 or (s3 = 0)
                 move ws-work-in (s2:1) to ws-work-out (s3:1)
                 subtract +1 from s3
              end-perform
           end-if

           .
       0130-exit.
           exit.

       0140-format-term.

           move zeros                  to ws-work-out
           perform varying s2 from +10 by -1 until
              (s2 < +1)
              or (ws-work-in (s2:1) numeric)
           end-perform
           if s2 > +0
              move ws-work-in (s2:1)
                                    to ws-work-out (10:1)
              move +9               to s3
              subtract +1 from s2
              perform varying s2 from s2 by -1 until
                 (s2 < +1)
                 or (s3 = 7)
                 move ws-work-in (s2:1) to ws-work-out (s3:1)
                 subtract +1 from s3
              end-perform
           end-if

           .
       0140-exit.
           exit.

       0150-format-apr.

           move zeros                  to ws-work-out
           perform varying s2 from +10 by -1 until
              (s2 < +1)
              or (ws-work-in (s2:1) = '.')
           end-perform
           if s2 < +5
              move ws-work-in (s2 + 1:5)
                                    to ws-work-out (6:5)
              move +5               to s3
              subtract +1 from s2
              perform varying s2 from s2 by -1 until
                 (s2 < +1)
                 or (s3 = 0)
                 move ws-work-in (s2:1) to ws-work-out (s3:1)
                 subtract +1 from s3
              end-perform
           end-if

           .
       0150-exit.
           exit.

       0200-calc-payment.

      ***____________________________________________________________***
      **(-                                                          -)**
      **(-   Right now this works for FL net pay +2 only            -)**
      **(-                                                          -)**
      ***____________________________________________________________***
           move 2                      to plus2

           move ws-rate-loan-amt       to l
           move ws-rate-loan-term      to n
           move ws-rate-lf-term        to m
           move ws-rate-pmts-per-year  to ppy
           move 30                     to dpp
           compute i = ws-rate-apr / (ppy *100)

           COMPUTE A-ANGLE-N ROUNDED =
               (1 - ((1 / (1 + I)) ** N)) / I

           COMPUTE A-ANGLE-N-M ROUNDED =
               (1 - ((1 / (1 + I)) ** (N - M))) / I

           COMPUTE GAMMA ROUNDED =
               (1 + ((D * I) / DPP)) / (1 + I)

           COMPUTE A-PRM-ANGLE-N ROUNDED =
              A-ANGLE-N / GAMMA

           COMPUTE TEMP-VALUE-3 ROUNDED =
              M + ((D - DPP) / DPP)

           compute mob rounded =
              (lf-rate / (m + (ppy/12))) * 2

      *    COMPUTE MOB ROUNDED =
      *       (lf-rate *
      *       (TEMP-VALUE-3 / PPY)) / ((M + (PPY / 12)) / 2)

           COMPUTE TEMP-VALUE-1 ROUNDED =
               (M - (A-ANGLE-N - A-ANGLE-N-M)) / I

           COMPUTE TEMP-VALUE-2 ROUNDED =
               1 + (PLUS2 * I * (PPY / 12))

           display ' L         ' l
           display ' anglen       ' a-angle-n
           display ' gamma        ' gamma
           display ' tv3          ' temp-value-3
           display 'a-prm-angle-n ' a-prm-angle-n
           display ' tv1          ' temp-value-1
           display ' mob          ' mob
           display ' tv2          ' temp-value-2
           display ' ah rate      ' ah-rate
           display ' m            ' m
           COMPUTE pmt ROUNDED =
               L / (A-PRM-ANGLE-N - (TEMP-VALUE-1 * (MOB / 100) *
               TEMP-VALUE-2) - ((ah-rate * M) / 100))

           COMPUTE DL-PREMIUM ROUNDED = Pmt *
               TEMP-VALUE-1 * (MOB / 100) * TEMP-VALUE-2

           COMPUTE AH-PREMIUM ROUNDED =
               Pmt * M * (AH-RATE / 100)
 
           COMPUTE T-FINANCED =
               L + DL-PREMIUM + AH-PREMIUM

           COMPUTE T-PAYMENTS = N * Pmt

           move pmt                    to ws-rate-per-pmt
           move dl-premium             to ws-rate-lf-prem
           move ah-premium             to ws-rate-ah-prem
           move t-financed             to ws-rate-tot-financed
           move t-payments             to ws-rate-tot-pmts

           display ' lf-rate       ' lf-rate
           display ' ah-rate       ' ah-rate
           display ' payment       ' pmt
           display ' lf prem       ' ws-rate-lf-prem
           display ' ah prem       ' ws-rate-ah-prem
           display ' tot financed  ' ws-rate-tot-financed
           display ' tot payments  ' ws-rate-tot-pmts

           .
       0200-exit.
           exit.

       0300-RETURN-CICS.

           move ws-return-string       to dfhcommarea
           exec cics return end-exec
           goback

           .
       0300-exit.
           exit.

       6000-CONNECT-TO-DB.
      
      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

           MOVE 'NTSQLTST2_CrtManage'  TO SVR
           move 'sa'                   to usr
           move 'sql2008r2'            to pass

           if ws-kix-myenv = 'cid1p'
              MOVE 'NTCSO2_CrtManage'  TO SVR
              move 'sa'                to usr
              move 'ntcso2'            to pass
           end-if

           string
               usr delimited space
               "." delimited size
               pass delimited space into usr-pass
           end-string

           display ' About to connect to ' svr ' ' usr-pass

           EXEC SQL
              CONNECT TO :svr USER :usr-pass
           END-EXEC
       
           if sqlcode not = 0
              display "Error: cannot connect to " svr
              display sqlcode
              display sqlerrmc
           else
              display ' Successful Connect ' sqlcode
              set connected-to-db to true
           end-if

           .
       6000-EXIT.
           EXIT.

       7000-GET-RATE.
       
           EXEC CICS LINK
              PROGRAM ('ELRATE')
              COMMAREA (CALCULATION-PASS-AREA)
              LENGTH   (CP-COMM-LENGTH)
           END-EXEC
           
           .
       7000-EXIT.
           EXIT.

       9700-DATE-LINK.

           EXEC CICS LINK
                PROGRAM  ('ELDATCV')
                COMMAREA (DATE-CONVERSION-DATA)
                LENGTH   (DC-COMM-LENGTH)
           END-EXEC.

       9700-EXIT.
            EXIT.

