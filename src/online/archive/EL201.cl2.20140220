      $SET SQL(dbman=ODBC, TARGETDB=MSSQLSERVER, NOAUTOCOMMIT)
      *****************************************************************
      *                                                               *
      * Copyright (c) 2014 by Central States Health and Life          *
      * All rights reserved.                                          *
      *                                                               *
      *****************************************************************
       identification division.
       program-id. EL201.
      *
      *AUTHOR.    Pablo.
      *           Colleyville, TEXAS.

      *REMARKS.
      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  Post check number and check written date to refund checks ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

011714******************************************************************
011714*                   C H A N G E   L O G
011714*
011714* CHANGES ARE MARKED BY THE CHANGE EFFECTIVE DATE.
011714*-----------------------------------------------------------------
011714*  CHANGE   CHANGE REQUEST PGMR  DESCRIPTION OF CHANGE
011714* EFFECTIVE    NUMBER
011714*-----------------------------------------------------------------
011714* 011714  CR2013053000001  PEMA  NEW PROGRAM

       environment division.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

       SELECT CPS-WRITTEN-IN ASSIGN TO dynamic ws-written-in
          FILE STATUS IS WRITTEN-STATUS
                                  ORGANIZATION IS LINE SEQUENTIAL.

       SELECT CPS-WRITTEN-RPT ASSIGN TO dynamic ws-written-rpt
          FILE STATUS IS WRITRPT-STATUS
                                  ORGANIZATION IS LINE SEQUENTIAL.

       data division.
       FILE SECTION.

       FD  CPS-WRITTEN-IN
           BLOCK CONTAINS 0
           RECORDING MODE F.
       01  CPS-WRITTEN-IN-REC          pic x(200).

       FD  CPS-WRITTEN-RPT
           BLOCK CONTAINS 0
           RECORDING MODE F.
       01  CPS-WRITTEN-RPT-REC         pic x(132).

       working-storage section.

       77  ws-process-sw               pic x value ' '.
           88  process-cashed            value 'C'.
           88  process-written           value 'W'.
       77  ws-writ-cnt                 pic 9(5) value zeros.
       77  ws-tot-writ-amt             pic s9(9)v99 comp-3 value +0.
       77  s1                          pic s999 comp-3 value +0.
       77  s2                          pic s999 comp-3 value +0.
       77  ws-bin-cashed-dt            pic xx  value low-values.
       77  ws-bin-check-dt             pic xx  value low-values.
       77  ws-page-cntr                pic 999  value zeros.
       77  ws-line-cntr                pic 999  value 070.
       77  ws-max-lines                pic 999  value 060.
       77  ws-erchek-sw                pic x    value spaces.
           88  erchek-found              value 'Y'.
       77  ws-table-sw                 pic x    value spaces.
           88  table-found               value 'Y'.
       77  ws-continue-sw              pic x  value 'Y'.
           88  ok-to-continue            value 'Y'.
           88  not-ok-to-continue        value 'N'.
       77  ws-in-recs                  pic 9(5) value zeros.
       77  ws-eof-sw                   pic x  value spaces.
           88  end-of-input                  value 'Y'.
       77  ws-sql-code                 pic s9(7) value zeros.
       77  ws-dis-sql-code             pic -9999999 value zeros.

       01  ws-written-in.
           05  ws-writ-in-dir          pic x(15)  value
               '/data/seqfiles/'.
           05  ws-writ-in-name         pic x(16) value
               'miscpymts.csv   '.

       01  ws-written-rpt.
           05  ws-writ-rpt-dir         pic x(15)  value
               '/data/seqfiles/'.
           05  ws-writ-rpt-comp-id     pic xxx  value spaces.
           05  ws-writ-rpt-name        pic x(13) value
               'miscpymts.rpt'.

       EXEC SQL
          INCLUDE SQLDA
       END-EXEC
      
       EXEC SQL
          INCLUDE SQLCA
       END-EXEC

       EXEC SQL
          BEGIN DECLARE SECTION
       END-EXEC

       01  ws-key-stuff.
           05  ws-check-key            pic 9(7).
           05  ws-check-no             pic x(7).
           05  ws-compid               pic xxx.
           05  ws-carrier              pic x.
           05  ws-grouping             pic x(6).
           05  ws-state                pic xx.
           05  ws-account              pic x(10).
           05  ws-eff-date             pic x(10).
           05  ws-certificate          pic x(10).
           05  ws-cert-sfx             pic x.
           05  ws-seq-no               pic 999.
           05  ws-type                 pic 999.

       01  sqlcmd                      pic x(1024).
       01  WS-MOE-DATE                 pic x(10).
       01  svr                         pic x(32).
       01  usr                         pic x(32).
       01  pass                        pic x(32).
       01  usr-pass                    pic x(64).
       01  ws-disp-code                pic s9(11).

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  These indicators are used to determine if a variable      ***
      ***  is passed nulls from sql. The indicator will be -1        ***
      ***  if the value on sql is nulls and +0 if the value is       ***
      ***  something other than nulls. Here is an example on how     ***
      ***  to use the indicator variables.                           ***
      ***                                                            ***
      ***     EXEC SQL                                               ***
      ***        fetch checkapp into                                 ***
      ***           :db-app-status :nu-app-status,                   ***
      ***           :db-app-by     :nu-app-by,                       ***
      ***           :db-app-date   :nu-app-date,                     ***
      ***           :db-app-batch  :nu-app-batch                     ***
      ***     END-EXEC                                               ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

       01  indicator-vaiables-for-nulls.
           05  nu-app-status           pic s9(4) comp value +0.
           05  nu-app-by               pic s9(4) comp value +0.
           05  nu-app-date             pic s9(4) comp value +0.
           05  nu-app-batch            pic s9(4) comp value +0.
           05  nu-fincar               pic s9(4) comp value +0.
           05  nu-checkno              pic s9(4) comp value +0.
       01  daily-check-request-rec.
           05  db-checkkey             pic x(7).
           05  db-compid               pic xxx.
           05  db-carrier              pic x.
           05  db-grouping             pic x(6).
           05  db-state                pic xx.
           05  db-account              pic x(10).
           05  db-effdate              pic x(24).
           05  db-certificate          pic x(10).
           05  db-cert-sfx             pic x.
           05  db-seq-no               pic x(7).
           05  db-type                 pic x(7).
           05  db-amount               pic x(10).
           05  db-amount-n redefines
               db-amount               pic 9(7).99.
           05  db-checkno              pic x(15).
           05  db-checkdate            pic x(10).
           05  db-checkstatus          pic 9(5).
           05  db-releasebatch         pic 9(5).
           05  db-releasedt            pic x(10).
           05  db-releaseby            pic x(4).
           05  db-payeename1           pic x(30).
           05  db-payeename2           pic x(30).
           05  db-payeeaddr1           pic x(30).
           05  db-payeeaddr2           pic x(30).
           05  db-payeecity            pic x(30).
           05  db-payeest              pic xx.
           05  db-payeezip             pic x(10).
           05  db-fincar               pic x.
           05  db-fingrp               pic x(6).
           05  db-finresp              pic x(10).
           05  db-finacct              pic x(10).
           05  db-preparer             pic x(4).
           05  db-app-status           pic x(9).
           05  dp-app-status-n redefines db-app-status
                                       pic 9(9).
           05  db-app-by               pic x(20).
           05  db-app-date             pic x(30).
           05  db-app-batch            pic x(10).
           05  db-return-to            pic x(30).

       EXEC SQL
          END DECLARE SECTION
       END-EXEC

       01  FILE-KEYS.
           12  ELCNTL-KEY.                                              
               16 ELCNTL-COMP-ID           PIC XXX     VALUE SPACES.    
               16 ELCNTL-REC-TYPE          PIC X       VALUE SPACES.    
               16 ELCNTL-ACCESS.                                        
                   20 ELCNTL-STATE         PIC XX      VALUE SPACES.    
                   20  FILLER              PIC X       VALUE SPACES.    
                   20 ELCNTL-CARRIER       PIC X       VALUE SPACES.    
               16 ELCNTL-SEQ               PIC S9(4)   VALUE +0    COMP.

       01  f.
           05  ws-connect-sw               pic x  value ' '.
               88  connected-to-db             value 'Y'.
           05  written-status          pic xx.
           05  writrpt-status          pic xx.
           05  ws-comp-id              pic xxx.
           05  ws-comp-cd              pic x.

       01  ws-written-rec.
           05  wsw-check-no            pic x(20).
           05  wsw-check-dt            pic x(20).
           05  wsw-check-amt           pic x(15).
           05  wsw-vendor-id           pic x(20).
           05  wsw-user-defined        pic x(30).
           05  wsw-voucher-ref         pic x(35).

       01  filler.
           05  wsw-check-key           pic x(7).
           05  wsw-check-key-num redefines wsw-check-key
                                       pic 9(7).

       01  WS-RESPONSE                 PIC S9(8) COMP VALUE +0.
           88  RESP-NORMAL                    VALUE +0.
           88  resp-file-notfnd               value +12.
           88  RESP-NOTFND                    VALUE +13.
           88  resp-duprec                    value +14.
           88  resp-dupkey                    value +15.
           88  resp-invreq                    value +16.
           88  RESP-NOTOPEN                   VALUE +19.
           88  RESP-ENDFILE                   VALUE +20.
           88  resp-lengtherr                 value +22.

       01  ws-work-amt-alpha           pic x(10).
       01  ws-work-amt-num redefines ws-work-amt-alpha
                                       pic 9(8)v99.
       01  ws-qry-string               pic x(80) value spaces.
       01  ws-qrystr-len               pic s9(8) comp value +60.
       01  ws-seq-alpha                pic x(5).
       01  ws-seq-no-num redefines ws-seq-alpha
                                       pic 9(5).

                                       copy ERCCHEK.
                                       copy ELCFUNDT.
                                       COPY ELCDATE.
                                       COPY ELCCNTL.
       01  ws-heading1.
           05  ws-head1                pic x(120)  value '              
      -     '                                   DAILY CHECK RECONCILIATI
      -     'ON                                            '.
           05  ws-h1-rpt-id            pic x(6)  value 'EL201A'.

       01  ws-heading2.
           05  filler                  pic x(45) value spaces.
           05  WS-H2-CLIENT-NAME       PIC X(65) VALUE SPACES.
           05  WS-H2-DATE              PIC X(10).
           05  ws-h2-time              pic x(8).

       01  ws-heading3.
           05  filler                  pic x(53) value spaces.
           05  WS-H3-DATE              PIC X(67) VALUE SPACES.
           05  FILLER                  PIC X(5)  VALUE 'PAGE '.
           05  WS-H3-PAGE              PIC ZZ,ZZ9.                  

       01  ws-heading4.
           05  filler                  pic x(117)   value ' CAR  GROUP  
      -        'ST   ACCOUNT    EFF DTE       CERT NO    TYPE   CHECK NO
      -        '  CHECK CASHED DT   PREPARER   AMOUNT    MESSAGE'.

       01  ws-hd1-written.
           05  filler                  pic x(120)  value '              
      -     '                                   DAILY WRITTEN CHECKS REP
      -     'ORT                                           '.
       01  ws-hd4-written.
           05  filler                  pic x(117)   value ' CAR  GROUP  
      -        'ST   ACCOUNT    EFF DTE       CERT NO    TYPE   CHECK NO
      -        '  CHECK WRITTEN DT  PREPARER   AMOUNT    MESSAGE'.

       01  ws-detail1.
           05  filler                  pic xx value '  '.
           05  ws-d1-carr              pic x(4).
           05  ws-d1-grp               pic x(7).
           05  ws-d1-state             pic x(4).
           05  ws-d1-account           pic x(12).
           05  ws-d1-eff-dt            pic x(12).
           05  ws-d1-cert-no           pic x(14).
           05  ws-d1-chk-type          pic x(5).
           05  ws-d1-chk-no            pic x(12).
           05  f                       pic xx.  
           05  ws-d1-writ-cash-dt      pic x(16).
           05  ws-d1-preparer          pic x(8).
           05  ws-d1-chk-amt-a         pic x(10).
           05  ws-d1-chk-amt redefines
               ws-d1-chk-amt-a         pic $$$,$$9.99.
           05  filler                  pic xx.
           05  ws-d1-message           pic x(20).

       01  ws-detail2.
           05  filler                  pic x(12) value '    PAYEE - '.
           05  ws-d2-addr-line         pic x(120) value spaces.

       01  ws-total1.
           05  filler                  pic x(5) value '     '.
           05  ws-t1-cnt               pic zzzz9  value zeros.
           05  ws-t1-chks              pic x(24)  value spaces.
           05  ws-t1-amount            pic $$,$$$,$$9.99 value zeros.

       01  w-doctoken                  pic x(16).
       01 output-data.
          05  filler                   pic x(6) value "TITLE=".
          05  output-title             pic x(26) value 'Check Posting'.
          05  filler                   pic x(8) value "&COMPID=".
          05  out-comp-id              pic xxx.
          05  filler                   pic x(5) value "&MSG=".
          05  output-msg               pic x(50).

       01  TRAN-DATA-LINE1             PIC X(80)    VALUE
pemtst     'cd /apps/prod/cid1p/jcl'.
       01  TRAN-DATA-LINE2.
           05  filler                  pic x(10) value 'unikixjob '.
           05  tdl2-job                pic x(8) value 'cilg201b'.
pemtst     05  filler                  pic x(9) value ' -k cid1p'.
           05  filler                  pic x(51) value spaces.

       procedure division.

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  Even though this program is using WEB Servies we don't    ***
      ***  have any form fields to browse through, we are getting    ***
      ***  the information we need through the variables that are    ***
      ***  included in the URL. These variables are retrieved by     ***
      ***  the           exec cics web extract                       ***
      ***                   querystring  (data-value)                ***
      ***                   querystrlen  (data-value)                ***
      ***                end-exec                                    ***
      ***  BTW, you must provide the length it isn't passed to you.  ***
      ***  Allow for extra on the length or you will get a length    ***
      ***  error instead of just truncation.                         ***
      ***                                                            ***
      ***  This program is expecting                                 ***
      *** http://slunikix:7001/cics/cwba/EL201?comp=CID&file=written***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

           MOVE FUNCTION CURRENT-DATE  TO FUNCTION-DATE

           move ws-fn-cymd             to dc-greg-date-cymd
           move 'L'                    to dc-option-code
           perform 9700-date-convert   thru 9700-exit
           if no-conversion-error
              move dc-greg-date-1-alpha to ws-h3-date
              move dc-greg-date-1-edit to ws-h2-date
           else
              display ' error current dt invalid ' dc-error-code
           end-if

           string ws-fn-hours   ':'
                  ws-fn-minutes ':'
                  ws-fn-seconds
              delimited by size into ws-h2-time
           end-string

           exec cics web extract
              querystring  (ws-qry-string)
              querystrlen  (ws-qrystr-len)
           end-exec

           move ws-qry-string (6:3)    to ws-comp-id
                                          out-comp-id

           move 'Successful Run   '    to output-msg
           move ws-comp-id             to elcntl-key
           move '1'                    to elcntl-rec-type
           move +0                     to elcntl-seq
           exec cics read
              dataset  ('ELCNTL')
              into     (control-file)
              ridfld   (elcntl-key)
              resp     (ws-response)
           end-exec

           if resp-normal
              move cf-cl-mail-to-name  to ws-h2-client-name
              move cf-company-cd       to ws-comp-cd
           else
              move 'Company Rec not found ' to ws-h2-client-name
                                               output-msg
              display ' error elcntl read ' ws-response ' '
                 elcntl-key (1:8)
              go to 0000-return
           end-if

           evaluate true
              when ws-qry-string (15:7) = 'written' or 'WRITTEN'
                 set process-written      to true
                 perform 2000-process-written
                                       thru 2000-exit
              when other
                 move 'Invalid File ' to output-msg
           end-evaluate

           if connected-to-db
              EXEC SQL
                  commit work release
              END-EXEC
              if sqlcode not = 0
                 move ' Failed to Commit DB '
                                       to output-msg
                 display "Error: commit release "
                 display ' sql return code ' sqlcode
                 display ' sql err mess    ' sqlerrmc
              end-if
           end-if

           .
       0000-return.

           perform 1030-send-form      thru 1030-exit

           exec cics
              return
           end-exec

           .
       1000-CONNECT-DB.

           move 'NTCSO2_ChkApprv'      to svr
           move 'sa'                   to usr
           move 'ntcso2'               to pass

           string
               usr delimited space
               "." delimited size
               pass delimited space into usr-pass
           end-string

           EXEC SQL
              CONNECT TO :svr USER :usr-pass
           END-EXEC
       
           if sqlcode not = 0
              display "Error: cannot connect "
              display sqlcode
              display sqlerrmc
              move 'Failed to connect to DB'
                                       to output-msg
              go to 0000-return
           else
              set connected-to-db to true
           end-if

           .
       1000-EXIT.
           EXIT.

       1020-read-erchek.

           move ws-comp-cd             to ch-company-cd
           move db-carrier             to ch-carrier
           move db-grouping            to ch-grouping
           move db-state               to ch-state
           move db-account             to ch-account
           move db-certificate         to ch-cert-prime
           move db-cert-sfx            to ch-cert-sfx

           string db-effdate (1:4)
                  db-effdate (6:2)
                  db-effdate (9:2)
              delimited by size into dc-greg-date-cymd-r
           end-string
           move 'L'                    to dc-option-code
           perform 9700-date-convert   thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ch-cert-eff-dt
           else
              display ' error cvtdte eff dt ' db-effdate ' '
                 dc-error-code
           end-if
           move zeros                  to ws-seq-alpha
           move +5                     to s2
           perform varying s1 from +5 by -1 until s1 < +1
              if db-seq-no (s1:1) numeric
                 move db-seq-no (s1:1) to ws-seq-alpha (s2:1)
                 subtract +1 from s2
              end-if
           end-perform

           move ws-seq-no-num          to ch-sequence-no

pemtst*    display ' dte   **' db-effdate '**'
pemtst*    display ' carrier ' ch-carrier
pemtst*    display ' group   ' ch-grouping
pemtst*    display ' state   ' ch-state
pemtst*    display ' acct    ' ch-account
pemtst*    display ' cert  **' ch-cert-no '**'
pemtst*    display ' seq     ' ch-sequence-no

           exec cics read
pemtst        update
              dataset    ('ERCHEK')
              into       (check-records)
              ridfld     (ch-control-primary)
              resp       (ws-response)
           end-exec

           .
       1020-exit.
           exit.

       1030-send-form.

           exec cics document create
              doctoken   (w-doctoken)
              template   ('WCHECKS')
              symbollist (output-data)
              listlength (length of output-data)
           end-exec

           exec cics web send
              doctoken(w-doctoken)
           end-exec

           .
       1030-exit.
           exit.

       1050-disconnect.

           if connected-to-db
              EXEC SQL
                  disconnect all
              END-EXEC
              move ' ' to ws-connect-sw
           end-if

           .
       1050-exit.
           exit.

       2000-process-written.

           perform 2010-open-files     thru 2010-exit
           perform 2020-init           thru 2020-exit
           perform 2050-process-input  thru 2050-exit until
              end-of-input
           move ws-writ-cnt            to ws-t1-cnt
           move ' Written '            to ws-t1-chks
           move ws-tot-writ-amt        to ws-t1-amount
           move spaces                 to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit
           move ws-total1              to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit
           perform 2500-close-files    thru 2500-exit

           perform 5000-submit-job     thru 5000-exit

           .
       2000-exit.
           exit.

       2010-open-files.

           move function upper-case(ws-comp-id)
                                       to ws-writ-rpt-comp-id

           if ws-writ-rpt-comp-id = 'AHL'
              move 'miscpymtsahl.csv'  to ws-writ-in-name
           end-if

           open input CPS-WRITTEN-IN
               output CPS-WRITTEN-RPT

           if written-status not = '00'
              display 'error written open ' written-status
              move ' Invalid or missing file '
                                       to output-msg
              go to 0000-return
           end-if

           .
       2010-exit.
           exit.

       2020-init.

           move spaces                 to ws-detail1
           move ws-hd1-written         to ws-head1
           move 'EL201B'               to ws-h1-rpt-id
           move ws-hd4-written         to ws-heading4
           move 'Posting of Written Checks '
                                       to output-title
           if ws-comp-id = 'AHL'
              move 'ahlg201b'          to tdl2-job
           else
              move 'cilg201b'          to tdl2-job
           end-if

           if not connected-to-db
              perform 1000-connect-db  thru 1000-exit
           end-if

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      **     I do 2 reads to bypass the header record                ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

           perform 2040-read-input     thru 2040-exit
           perform 2040-read-input     thru 2040-exit

           .
       2020-exit.
           exit.

       2040-read-input.

           read CPS-WRITTEN-IN at end
              set end-of-input   to true
           end-read

           if not end-of-input
              add 1 to ws-in-recs
           end-if

           .
       2040-exit.
           exit.

       2050-process-input.

           unstring cps-written-in-rec
              delimited by ',' into
                 wsw-check-no      
                 wsw-check-dt
                 wsw-check-amt
                 wsw-vendor-id     
                 wsw-user-defined  
                 wsw-voucher-ref
           end-unstring

pemtst*    display ' chk no    **' wsw-check-no '**'
pemtst*    display ' chk dt    **' wsw-check-dt '**'
pemtst*    display ' chk amt   **' wsw-check-amt '**'
pemtst*    display ' vend id   **' wsw-vendor-id '**'
pemtst*    display ' user def  **' wsw-user-defined '**'
pemtst*    display ' vouch ref **' wsw-voucher-ref '**'

           string wsw-check-dt (1:4)
                  wsw-check-dt (6:2)
                  wsw-check-dt (9:2)
              delimited by size into dc-greg-date-cymd-r
           end-string
           move 'L'                    to dc-option-code
           perform 9700-date-convert   thru 9700-exit
           if no-conversion-error
              move dc-bin-date-1       to ws-bin-check-dt
           else
              display ' error cvtdte chek dt ' wsw-check-dt ' '
                 dc-error-code
           end-if

           move spaces                 to wsw-check-key
           perform varying s1 from +30 by -1 until
              (s1 < +1)
              or (wsw-user-defined (s1:1) numeric)
           end-perform
           if s1 > +7
              move wsw-user-defined (s1 - 6:7)
                                       to wsw-check-key
           else
              move 'invalid input '    to ws-d1-message
              go to 2050-continue
           end-if

pemtst*    go to 2050-read
           move ' '                    to ws-erchek-sw
                                          ws-table-sw

           perform 2200-get-tbl-row    thru 2200-exit
           if sqlcode = 0
              set table-found          to true
              perform 1020-read-erchek thru 1020-exit
              if resp-normal
                 set erchek-found to true
                 perform 2310-upd-erchek
                                       thru 2310-exit
                 perform 2320-upd-table thru 2320-exit
              else
                 display ' erchek not fnd ' ch-carrier ' ' ch-state ' '
                    ch-account ' ' db-effdate (1:10) ' ' db-certificate
                    ' ' ws-response
                 move ' chk rec not found ' to ws-d1-message
              end-if
           else
              move ' tbl row not found ' to ws-d1-message
           end-if

           .
       2050-continue.

           perform 2400-build-print-line thru 2400-exit
           .
       2050-read.
           perform 2040-read-input     thru 2040-exit

           .
       2050-exit.
           exit.

       2200-get-tbl-row.

      ***-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_***
      ***                                                            ***
      ***  I'm only expecting one row so no cursor is declared       ***
      ***                                                            ***
      ***_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-***

           move ws-comp-id             to ws-compid
           move wsw-check-key-num      to ws-check-key
           move 1                      to ws-type

           exec sql
              SELECT
                 CheckKey,
                 Company,
                 CertCarrier,
                 CertGroup,
                 CertState,
                 CertAccount,
                 CertEffDate,
                 CertNumber,
                 CertNumberSuf,
                 CheckSeqNbr,
                 CheckType,
                 CheckAmount,
                 Preparer
              INTO
                 :db-checkkey,
                 :db-compid,
                 :db-carrier,
                 :db-grouping,
                 :db-state,
                 :db-account,
                 :db-effdate,
                 :db-certificate,
                 :db-cert-sfx,
                 :db-seq-no,
                 :db-type,
                 :db-amount,
                 :db-preparer
              FROM
                 ChkApp_Check
              WHERE
                 (CheckKey    = :ws-check-key)
                 and (Company = :ws-compid)
           end-exec

           if sqlcode not = 0
              move sqlcode to ws-sql-code
              move ws-sql-code to ws-dis-sql-code
              display ' dis sql code ' ws-dis-sql-code
              display "Error: cannot read row "
              display ' sql return code ' sqlcode
              display ' sql err mess    ' sqlerrmc
           end-if

           .
       2200-exit.
           exit.

       2310-upd-erchek.

           move ws-bin-check-dt        to ch-check-written-dt
           if wsw-check-no (1:1) = '"'
              move wsw-check-no (5:7)  to ch-check-no
           else
              move wsw-check-no (4:7)  to ch-check-no
           end-if

pemtst*    move zeros                  to ws-response
pemtst     exec cics rewrite
pemtst        dataset     ('ERCHEK')
pemtst        from        (check-records)
pemtst        resp        (ws-response)
pemtst     end-exec

           if resp-normal
              add 1 to ws-writ-cnt
              compute ws-tot-writ-amt =
                 ws-tot-writ-amt + ch-amount-paid
              move 'Successful Post '  to ws-d1-message
           else
              move '*** ERROR - NOT POSTED ***' TO ws-d1-message
           end-if

           .
       2310-exit.
           exit.

       2320-upd-table.

           string wsw-check-dt (6:2) '/'
                  wsw-check-dt (9:2) '/'
                  wsw-check-dt (1:4)
              delimited by size into db-checkdate

           move ch-check-no            to db-checkno

pemtst*    move zeros to sqlcode
pemtst     EXEC SQL
pemtst        UPDATE
                 ChkApp_Check
pemtst        SET
                 CheckNumber = :db-checkno,
pemtst           CheckDate = :db-checkdate
pemtst        WHERE
                 CheckKey = :db-checkkey
pemtst     END-EXEC

           if sqlcode not = 0
              move 'Table not updated ' to ws-d1-message
              display "Error: cannot update table   "
              display ' sql retrun code ' sqlcode
              display ' sql err mess    ' sqlerrmc
           end-if

           .
       2320-exit.
           exit.

       2400-build-print-line.

           if table-found
              move db-carrier          to ws-d1-carr
              move db-grouping         to ws-d1-grp
              move db-state            to ws-d1-state
              move db-account          to ws-d1-account
              string
                 db-effdate (6:2)   '/'
                 db-effdate (9:2)   '/'
                 db-effdate (1:4)
                 delimited by size into ws-d1-eff-dt
              end-string

              move db-certificate      to ws-d1-cert-no
              move db-cert-sfx         to ws-d1-cert-no (11:1)
              move 'REF'               to ws-d1-chk-type
              move +10                 to s2
              move zeros               to ws-work-amt-alpha
              perform varying s1 from +10 by -1 until s1 < +1
                 if db-amount (s1:1) numeric
                    move db-amount (s1:1)
                                       to ws-work-amt-alpha (s2:1)
                    subtract +1 from s2
                 end-if
              end-perform
              move ws-work-amt-num     to ws-d1-chk-amt
              move db-preparer         to ws-d1-preparer
              move db-checkno          to ws-d1-chk-no
              move db-checkdate        to ws-d1-writ-cash-dt
           else
              move wsw-check-no        to ws-d1-chk-no
           end-if              

           perform 4000-write-report   thru 4000-exit
           move spaces                 to ws-detail1

           .
       2400-exit.
           exit.

       2500-close-files.

           close cps-written-in cps-written-rpt

           .
       2500-exit.
           exit.

       4000-write-report.

           if ws-line-cntr > ws-max-lines
              move zeros               to ws-line-cntr
              perform 4010-write-headings thru 4010-exit
           end-if

           move ws-detail1             to cps-written-rpt-rec

           perform 4020-write-a-line   thru 4020-exit

           .
       4000-exit.
           exit.
       4010-write-headings.

           add 1 to ws-page-cntr
           move ws-page-cntr           to ws-h3-page

           move ws-heading1            to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move ws-heading2            to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move ws-heading3            to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move spaces                 to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move spaces                 to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move ws-heading4            to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           move spaces                 to cps-written-rpt-rec
           perform 4020-write-a-line   thru 4020-exit

           .
       4010-exit.
           exit.

       4020-write-a-line.

           write cps-written-rpt-rec

           add 1 to ws-line-cntr

           .
       4020-exit.
           exit.

       5000-submit-job.

           EXEC CICS WRITEQ TD
              QUEUE ('BTCH')
              FROM (TRAN-DATA-LINE1)
              LENGTH (80)
           END-EXEC

           EXEC CICS WRITEQ TD
              QUEUE ('BTCH')
              FROM (TRAN-DATA-LINE2)
              LENGTH (80)
           END-EXEC

           .
       5000-exit.
           exit.

       9700-DATE-CONVERT.

           EXEC CICS LINK
                PROGRAM  ('ELDATCV')
                COMMAREA (DATE-CONVERSION-DATA)
                LENGTH   (DC-COMM-LENGTH)
           END-EXEC.

       9700-EXIT.
            EXIT.
